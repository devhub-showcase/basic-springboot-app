---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: basic-springboot-app-pull-request
  annotations:
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: repo_name
      value: "{{ repo_name }}"
    - name: source_branch
      value: "{{ source_branch }}"
    - name: pull_request
      value: "{{ pull_request_number }}"
    - name: namespace
      value: team-a-dev
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: repo_name
      - name: source_branch
      - name: namespace
    workspaces:
      - name: source
      - name: basic-auth
    tasks:
      - name: fetch-repository
        taskRef:
          resolver: cluster
          params:
            - name: name
              value: git-clone
            - name: namespace
              value: openshift-pipelines
            - name: kind
              value: task
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: URL
            value: $(params.repo_url)
          - name: REVISION
            value: $(params.revision)
          - name: SUBDIRECTORY
            value: $(params.repo_name)
      - name: s2i-build
        taskRef:
          resolver: cluster
          params:
            - name: name
              value: s2i-1-16-0
            - name: namespace
              value: openshift-pipelines
            - name: kind
              value: task
        runAfter:
          - fetch-repository
        params:
        - name: VERSION
          value: openjdk-17-ubi8
        - name: RUNTIME
          value: java
        - name: PATH_CONTEXT
          value:  $(workspaces.source.path)/$(params.repo_name)
        - name: IMAGE
          value: "image-registry.openshift-image-registry.svc:5000/$(params.namespace)/$(params.repo_name):$(params.source_branch)"
        - name: TLSVERIFY
          value: "false"
        workspaces:
          - name: source
            workspace: source
      - name: scan-image
        taskRef:
          resolver: cluster
          params:
            - name: name
              value: rhacs-image-scan
            - name: namespace
              value: openshift-pipelines
            - name: kind
              value: task
        workspaces:
          - name: rox-api-token-auth
            workspace: rox-api-token-auth
        params:
        - name: image
          value: "image-registry.openshift-image-registry.svc:5000/$(params.namespace)/$(params.repo_name):$(params.source_branch)"
        - name: insecure-skip-tls-verify
          value: "true" # stackrox to OCP image registry x509 fail...
        - name: rox_token_file
          value: $(params.rox_token_file)
        runAfter:
          - s2i-build
      - name: fetch-helm-chart-repository
        taskRef:
          resolver: cluster
          params:
            - name: name
              value: git-clone
            - name: namespace
              value: openshift-pipelines
            - name: kind
              value: task
        runAfter:
          - scan-image
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: PARAM_DELETE_EXISTING
            value: "false"
          - name: SUBDIRECTORY
            value: "shared-helm-charts"
          - name: URL
            value: https://github.com/devhub-showcase/shared-helm-charts
          - name: REVISION
            value: main
      - name: install-helm-chart
        taskRef:
          resolver: cluster
          params:
            - name: name
              value: helm-upgrade-from-source
            - name: namespace
              value: openshift-pipelines
            - name: kind
              value: task
        runAfter:
          - fetch-helm-chart-repository
        workspaces:
          - name: source
            workspace: source
        params:
          - name: release_namespace
            value: $(params.namespace)
          - name: release_name
            value: $(params.repo_name)-pull-request-$(params.pull_request)
          - name: charts_dir
            value: "$(workspaces.source.path)/shared-helm-charts/charts/deploy"
          - name: overwrite_values
            value: image.repository=image-registry.openshift-image-registry.svc:5000/$(params.namespace)/$(params.repo_name),image.tag=$(params.pull_request)
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  # This workspace will inject secret to help the git-clone task to be able to
  # checkout the private repositories
  - name: basic-auth
    secret:
      secretName: "{{ git_auth_secret }}"
  - name: rox-api-token-auth
    secret:
      secretName: pipeline-build-secret
