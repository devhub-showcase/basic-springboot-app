---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: basic-springboot-app-main
  annotations:
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: repo_name
      value: "{{ repo_name }}"
    - name: namespace
      value: team-a-dev
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: repo_name
    workspaces:
      - name: source
      - name: basic-auth
      - name: dockerconfig
    tasks:
      - name: fetch-repository
        taskRef:
          resolver: cluster
          params:
            - name: name
              value: git-clone
            - name: namespace
              value: openshift-pipelines
            - name: kind
              value: task
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: URL
            value: $(params.repo_url)
          - name: REVISION
            value: $(params.revision)
          - name: SUBDIRECTORY
            value: $(params.repo_name)
      - name: s2i-build
        taskRef:
          resolver: cluster
          params:
            - name: name
              value: s2i-1-16-0
            - name: namespace
              value: openshift-pipelines
            - name: kind
              value: task
        runAfter:
          - fetch-repository
        params:
        - name: VERSION
          value: openjdk-11-ubi8
        - name: RUNTIME
          value: java
        - name: PATH_CONTEXT
          value:  $(workspaces.source.path)/$(params.repo_name)
        - name: IMAGE
          value: "quay.io/rhn_gps_vpogu/$(params.repo_name):$(params.revision)"
        workspaces:
          - name: source
            workspace: source
          - name: dockerconfig
            workspace: dockerconfig
      - name: helm-cleanup
        taskRef:
          resolver: cluster
          params:
            - name: name
              value: helm-uninstall
            - name: namespace
              value: openshift-pipelines
            - name: kind
              value: task
        runAfter:
          - s2i-build
        params:
          - name: release_namespace
            value:  $(params.namespace)
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: basic-auth
    secret:
      secretName: "{{ git_auth_secret }}"
  - name: dockerconfig
    secret:
      secretName: "pipeline-build-secret"